import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
import requests

def fetch_data_and_save_as_csv(link, csv_filename):
    response = requests.get(link)
    if response.status_code == 200:
        data = response.json()
        df = pd.DataFrame(data)
        df.to_csv(csv_filename, index=False)
        print("Data fetched from the link and saved as CSV.")
    else:
        print("Failed to fetch data from the link.")

link = "https://live.markethound.in/history/decay"
csv_filename = "straddle_data.csv"
fetch_data_and_save_as_csv(link, csv_filename)

straddle_data = pd.read_csv(csv_filename)

X = straddle_data.drop(columns=["Open", "High", "Low", "Close"])
y = straddle_data[["Open", "High", "Low", "Close"]]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

predictions = model.predict(X_test)

mse = mean_squared_error(y_test, predictions)
print("Mean Squared Error:", mse)
